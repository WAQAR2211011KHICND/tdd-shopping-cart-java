/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package test;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.shadow.com.univocity.parsers.common.IterableResult;

import static org.junit.jupiter.api.Assertions.*;

import java.util.List;

class AppTest {
    @Test void appHasAGreeting() {
        App classUnderTest = new App();
        assertNotNull(classUnderTest.getGreeting(),
         "app should have a greeting");
    }

    
// 1. Given that I a new --shopper--, when I begin 
// shopping, then I expect my --cart-- to be empty.
    @Test
    void testEmptyCart(){
        
        //Setup
        Cart cut = new Cart(); 

        //Execute
        Integer actual = cut.getItemsList().size();

        //Assert
        assertEquals(0, actual);

    }

// 2. Given I have an empty --cart--,
//    when I add an ---Item---, 
//    then I expect to the price reflect the sum of all the Items
//    in my cart.

    @Test
    void totalPriceWhenItemAdded(){

        //Setup
        Cart cut = new Cart(); 
        Item item1 = new Item( 1L, "Gooey Baton handbags" , 1000L);
        
        //Execute
        cut.addItem(item1);
        
        //Assert
        assertEquals(1000L, cut.getTotalPrice());
        
    }

// 3. Given I have cart with one item, 
//     when I add more of that item, 
//     then I expect to see its quantity update 
//     on the cart.
@Test
void checkTheQuantityUpdateOfItem(){

    //Setup
    Cart cut = new Cart(); 
    Item item1 = new Item( 1L, "Gooey Baton handbags" , 1000L);
    Item item2 = new Item( 1L, "Gooey Baton handbags" , 1000L);
    
    //Execute
    cut.addItem(item1);
    cut.addItem(item2);
    
    //Assert
    assertEquals(2, cut.getItemQuantity(1L));
    
}

// Item item3 = new Item( 2L, "Rolex watches" , 1000L);
// cut.addItem(item3);
    

}



/***
 
Class

1. Shopper
2. cart
3. item
4. 

 */